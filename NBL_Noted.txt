#73aa2a (Xanh dam)
#5f8c23 (Xanh dam dam)
#a4d227 (Xanh sang)
#9B9D9D (Xam)
#6c6d6d (Xam hon)

 cardAvatarPhone:'#9B9D9D',
 React Native Icon: http://ionicframework.com/docs/ionicons/
 Carousel: https://github.com/archriss/react-native-snap-carousel
react-native-elements: https://github.com/react-native-training/react-native-elements
react-native-map: https://github.com/airbnb/react-native-maps
Dropdownlist alert:  https://github.com/testshallpass/react-native-dropdownalert


Android SDK Location: C:\Users\NickHo\AppData\Local\Android\Sdk


  onRefreshScreen = data => {
    this.setState(data);
  }
this.props.navigation.navigate('PostRoomScreen', { onRefreshScreen: this.onRefreshScreen })
this.props.navigation.state.params.onRefreshScreen({ refreshScreen: true, profile: null });


*Check version of Exp SDK, React-Native SDK, React SDK 
https://github.com/react-community/create-react-native-app/blob/master/VERSIONS.md

setTimeout(
      ()=>{
          this.setState({
        data: this.state.data,
      })
      },
      2000);

* YANDEX TRANSALTE API KEY
trnsl.1.1.20180509T171052Z.84619fb9541e655c.9043b04a890697172a26a6422a20fafec15ea632


* STREETVIEW
https://stackoverflow.com/questions/387942/google-street-view-url

* PUSH NOTIFICATION
Android Token: ExponentPushToken[X44MIVEIOHZdIZMVverA9J], Release: ExponentPushToken[ycjiZbIzuZuk5oS0EhzWTB] 
ios Token: ExponentPushToken[vS58SIF376NWPW8QmPpnYV], Release: 
IOS Token:
Expo Push Notifcation API: https://exp.host/--/api/v2/push/send
Data: [{
   "to": "ExponentPushToken[vS58SIF376NWPW8QmPpnYV]",
  "data": {"screen":"ProfileScreen","params":{"name":"can","age":"35"}},
  "sound": "default",
  "title":"Nhabaola",
  "body": "HO CHAU CAN"
}, {
    "to": "ExponentPushToken[vS58SIF376NWPW8QmPpnYV]",
  "data": {"screen":"ProfileScreen","params":{"name":"can","age":"35"}},
  "sound": "default",
  "badge": 1,
  "title":"Nhabaola",
  "body": "HO CHAU CAN"
}]

* POST ERROR
if (Platform.OS === 'android') {
              ToastAndroid.showWithGravity('Lỗi ' + JSON.stringify(responseJson) + ', vui lòng liên hệ Admin trong mục Giúp Đỡ!', ToastAndroid.SHORT, ToastAndroid.TOP);
            }
            else {
              Alert.alert('Thông báo', 'Lỗi ' + JSON.stringify(responseJson) + ', vui lòng liên hệ Admin trong mục Giúp Đỡ!');
            }

* MESSAGE
 if (Platform.OS === 'android') {
                            ToastAndroid.showWithGravity('Bình luận thành công!', ToastAndroid.SHORT, ToastAndroid.TOP);
                        }
                        else {
                            Alert.alert('Thông báo', 'Bình luận thành công!');
                        }

* INFOPLIST IOS
https://developer.apple.com/library/content/qa/qa1937/_index.html

App Store submission disclaimer
If you need to submit you application to the AppStore, you need to add to your Info.plist all *UsageDescription keys with a string value explaining to the user how the app uses this data. Even if you don't use them.
So before submitting your app to the App Store, make sure that in your Info.plist you have the following keys:

<key>NSBluetoothPeripheralUsageDescription</key>
<string>Some description</string>
<key>NSCalendarsUsageDescription</key>
<string>Some description</string>
<key>NSCameraUsageDescription</key>
<string>Some description</string>
<key>NSLocationWhenInUseUsageDescription</key>
<string>Some description</string>
<key>NSPhotoLibraryAddUsageDescription</key>
<string>Some description</string>
<key>NSPhotoLibraryUsageDescription</key>
<string>Some description</string>
<key>NSSpeechRecognitionUsageDescription</key>
<string>Some description</string>
<key>NSAppleMusicUsageDescription</key>
<string>Some description</string>
<key>NSMotionUsageDescription</key>
<string>Some description</string>


* EASING
step0
step1
linear
ease
quad
cubic
poly
sin
circle
exp
elastic
back
bounce
bezier
in
out
inOut


* Scroll Animation
https://github.com/Monte9/react-native-parallax-scrollview
https://github.com/i6mi6/react-native-parallax-scroll-view

* List
https://github.com/Flipkart/ReactEssentials


const styleButton = {
    container: {
        paddingTop: 16,
        paddingBottom: 16,
        paddingLeft: 47,
        paddingRight: 47,
        backgroundColor: '#6c56b7',
        borderRadius: 30,
        alignItems: "stretch",
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.2,
        shadowRadius: 2,
    },
    text: {
        color: '#ffffff',
        fontSize: 18,
        fontWeight: "600",
        textAlign: "center",
        letterSpacing: 3
    }
}

FontFamily: arciform

Account Expo: hochaucan / can111!!!


Phòng ngủ có thể hoàn toàn thay đổi chỉ với giấy dán tường hay một vài chiếc ghế tựa. Trang Apartment Therapy đã gợi ý một số mẹo nhỏ giúp bạn làm mới phòng ngủ.


Cong Thuc Tinh PageIndex
PageIndex = (Page -1)*PageCount


GMAP Key: AIzaSyBIhOGDA4Cvocj02AYdnxYK5oGeg6VwetM 

 <uses-permission android:name="android.permission.INTERNET" />

 <script async defer
� � src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBIhOGDA4Cvocj02AYdnxYK5oGeg6VwetM&callback=initMap">
�</script>


Apple ID: hochaucan@gmail.com
Pass: Rongxanh1
Team ID: FMVSD22NXF

* FACEBOOK
Facebook App ID: 485931318448821
Facebook App Secret: 
Facebook client token: 
Facebook Code: 
Facebook get fields: https://developers.facebook.com/docs/graph-api/using-graph-api/#fieldexpansion
Facebook Permission: https://developers.facebook.com/docs/facebook-login/permissions/v2.12
Facebook User ID - Can HO: 1550074775013689
Facebook GRAPH Explorer
https://developers.facebook.com/tools/explorer/485931318448821?method=GET&path=1550074775013689%2Fphotos&version=v2.12
Facebook Test User: {"id":"109653393236472","access_token":"EAAG587OfErUBAEQZAIsllv8ZBDZAhfrzZBfWx2J2LvGGb6usSZA8SCgMvGhFNRO3ttuyDZAnqFdkora89lZC4Rr1u5c5o33jLs9ZCoMQaH1KM6fmqhGPjwGn6QcXRHwJMZCZBI6ZBZCoRJvPtjpPbsFQZAqxWzmx7e0g07OJeOf8oFu6eeje0ht0xvU32i00YpK2U85ZBKZB5uQRdScvWJZBoWGkCV3o","login_url":"https://developers.facebook.com/checkpoint/test-user-login/109653393236472/","email":"eljhxyadmo_1525182920@tfbnw.net","password":"1792583172"}
Test User Link: https://developers.facebook.com/checkpoint/test-user-login/109653393236472/
Test User Account: eljhxyadmo_1525182920@tfbnw.net / 1792583172




Setup the Facebook SDK for JavaScript
The following snippet of code will give the basic version of the SDK where the options are set to their most common defaults. You should insert it directly after the opening <body> tag on each page you want to load it:
<script>
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '143030619610047',
      xfbml      : true,
      version    : 'v2.9'
    });
    FB.AppEvents.logPageView();
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "//connect.facebook.net/en_US/sdk.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));
</script>




Google Client ID: 297432470822-l9aue9ksl73tuvinkbhjd1o5oga2lnjf.apps.googleusercontent.com
Google client secret: jiWOvSZ4JQI-yjP2Rjjoj1Xg 

{"web":{"client_id":"297432470822-2h1th102676l65t4c4ll1itean0anp4k.apps.googleusercontent.com","project_id":"api-project-297432470822","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://accounts.google.com/o/oauth2/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"jiWOvSZ4JQI-yjP2Rjjoj1Xg","redirect_uris":["http://busstation.vn"],"javascript_origins":["http://nhabaola.vn"]}}





keytool -exportcert -alias androiddebugkey -keystore %HOMEPATH%\.android\debug.keystore | C:\OpenSSL\bin\openssl.exe sha1 -binary | C:\OpenSSL\bin\openssl.exe base64


Hash Key
Bmce+9aHdOoVtE7fS3B07tfj7Bc=




{
  "name": "nhabaolaMobile",
  "dependencies": {
    "ionic": "driftyco/ionic-bower#1.2.4"
  }
}



DINH VI HAO QUANG
/*media all*/
main .pulsing-rings .pulsing-ringlet {
    width: 150px;
    height: 150px;
    background: #fff;
    border: 1px solid #a4d227;
    border-radius: 50%;
    position: absolute;
    transform: scale(0.1);
    opacity: 0;
    animation: ring-1 3000ms ease-out infinite;
}

<div class="pulsing-rings">
          <div class="pulsing-ringlet"></div>
          
          
        </div>





Get SHA1 for restricted Google API Key:
c:\Program Files (x86)\Java\jdk1.7.0_55\bin>keytool -list -v -keystore D:\Project\Nhabaola\keystores.jks -alias keystores


Release Hash Key for Facebook Login:
GlFVMvF+WLraFAhgm/jhD+vev/w=


* CONVERT NUMBER TO WORDING
var ChuSo = new Array(" không ", " một ", " hai ", " ba ", " bốn ", " năm ", " sáu ", " bảy ", " tám ", " chín ");
var Tien = new Array("", " nghìn", " triệu", " tỷ", " nghìn tỷ", " triệu tỷ");

function DocSo3ChuSo(baso) {
    var tram;
    var chuc;
    var donvi;
    var KetQua = "";
    tram = parseInt(baso / 100);
    chuc = parseInt((baso % 100) / 10);
    donvi = baso % 10;
    if (tram == 0 && chuc == 0 && donvi == 0) return "";
    if (tram != 0) {
        KetQua += ChuSo[tram] + " trăm ";
        if ((chuc == 0) && (donvi != 0)) KetQua += " linh ";
    }
    if ((chuc != 0) && (chuc != 1)) {
        KetQua += ChuSo[chuc] + " mươi";
        if ((chuc == 0) && (donvi != 0)) KetQua = KetQua + " linh ";
    }
    if (chuc == 1) KetQua += " mười ";
    switch (donvi) {
        case 1:
            if ((chuc != 0) && (chuc != 1)) {
                KetQua += " mốt ";
            }
            else {
                KetQua += ChuSo[donvi];
            }
            break;
        case 5:
            if (chuc == 0) {
                KetQua += ChuSo[donvi];
            }
            else {
                KetQua += " lăm ";
            }
            break;
        default:
            if (donvi != 0) {
                KetQua += ChuSo[donvi];
            }
            break;
    }
    return KetQua;
}


function DocTienBangChu(SoTien) {
    var lan = 0;
    var i = 0;
    var so = 0;
    var KetQua = "";
    var tmp = "";
    var ViTri = new Array();
    if (SoTien < 0) return "Số tiền âm !";
    if (SoTien == 0) return "Không đồng !";
    if (SoTien > 0) {
        so = SoTien;
    }
    else {
        so = -SoTien;
    }
    if (SoTien > 8999999999999999) {
        //SoTien = 0;
        return "Số quá lớn!";
    }
    ViTri[5] = Math.floor(so / 1000000000000000);
    if (isNaN(ViTri[5]))
        ViTri[5] = "0";
    so = so - parseFloat(ViTri[5].toString()) * 1000000000000000;
    ViTri[4] = Math.floor(so / 1000000000000);
    if (isNaN(ViTri[4]))
        ViTri[4] = "0";
    so = so - parseFloat(ViTri[4].toString()) * 1000000000000;
    ViTri[3] = Math.floor(so / 1000000000);
    if (isNaN(ViTri[3]))
        ViTri[3] = "0";
    so = so - parseFloat(ViTri[3].toString()) * 1000000000;
    ViTri[2] = parseInt(so / 1000000);
    if (isNaN(ViTri[2]))
        ViTri[2] = "0";
    ViTri[1] = parseInt((so % 1000000) / 1000);
    if (isNaN(ViTri[1]))
        ViTri[1] = "0";
    ViTri[0] = parseInt(so % 1000);
    if (isNaN(ViTri[0]))
        ViTri[0] = "0";
    if (ViTri[5] > 0) {
        lan = 5;
    }
    else if (ViTri[4] > 0) {
        lan = 4;
    }
    else if (ViTri[3] > 0) {
        lan = 3;
    }
    else if (ViTri[2] > 0) {
        lan = 2;
    }
    else if (ViTri[1] > 0) {
        lan = 1;
    }
    else {
        lan = 0;
    }
    for (i = lan; i >= 0; i--) {
        tmp = DocSo3ChuSo(ViTri[i]);
        KetQua += tmp;
        if (ViTri[i] > 0) KetQua += Tien[i];
        if ((i > 0) && (tmp.length > 0)) KetQua += ',';//&& (!string.IsNullOrEmpty(tmp))
    }
    if (KetQua.substring(KetQua.length - 1) == ',') {
        KetQua = KetQua.substring(0, KetQua.length - 1);
    }
    KetQua = KetQua.substring(1, 2).toUpperCase() + KetQua.substring(2);
    return KetQua;//.substring(0, 1);//.toUpperCase();// + KetQua.substring(1);
}





*app.json
{
  "expo": {
    "name": "Expo APIs",
    "description": "This demonstrates a bunch of the native components that you can use in React Native core and Expo.",
    "slug": "native-component-list",
    "sdkVersion": "24.0.0",
    "version": "24.0.0",
    "orientation": "portrait",
    "primaryColor": "#cccccc",
    "privacy": "public",
    "icon": "./assets/icons/icon.png",
    "scheme": "ncl",
    "notification": {
      "icon": "./assets/icons/notificationIcon.png",
      "color": "#000000"
    },
    "splash": {
      "image": "./assets/icons/loadingIcon.png"
    },
    "packagerOpts": {
      "assetExts": ["ttf", "mp4"]
    },
    "facebookScheme": "fb1201211719949057",
    "facebookAppId": "1201211719949057",
    "facebookDisplayName": "Expo APIs",
    "androidShowExponentNotificationInShellApp": true,
    "android": {
      "package": "host.exp.nclexp",
      "versionCode": 11,
      "config": {
        "googleSignIn": {
          "apiKey": "AIzaSyC2kse8d0rFfi27jff5nD14cSNcPBQC4Tk",
          "certificateHash": "1746BECB2497593B3296903145793BC0BE8C426B"
        },
        "googleMaps": {
          "apiKey": "AIzaSyC2kse8d0rFfi27jff5nD14cSNcPBQC4Tk",
        }
      }
    },
    "ios": {
      "bundleIdentifier": "host.exp.nclexp",
      "config": {
        "usesNonExemptEncryption": false,
        "googleSignIn": {
          "reservedClientId": "com.googleusercontent.apps.603386649315-1b2o2gole94qc6h4prj6lvoiueq83se4"
        }
      }
    },
    "assetBundlePatterns": [
      "assets/**",
      "node_modules/react-navigation/src/**/*.png",
      "node_modules/@expo/vector-icons/fonts/*.ttf"
    ]
  }
}











